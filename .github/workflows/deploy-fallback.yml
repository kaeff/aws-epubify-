name: Deploy to Vercel (Fallback)

on:
  workflow_dispatch:
  push:
    branches: [develop]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get package manager
        id: package-manager
        run: |
          if [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f package-lock.json ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npm run" >> $GITHUB_OUTPUT
          elif [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install --frozen-lockfile" >> $GITHUB_OUTPUT
            echo "runner=pnpm" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=npm run" >> $GITHUB_OUTPUT
          fi

      - name: Setup package manager
        if: steps.package-manager.outputs.manager == 'pnpm'
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup package manager cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.yarn
            ~/.pnpm
          key: ${{ runner.os }}-${{ steps.package-manager.outputs.manager }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.package-manager.outputs.manager }}-

      - name: Install dependencies
        run: ${{ steps.package-manager.outputs.manager }} ${{ steps.package-manager.outputs.command }}

      - name: Build application
        run: ${{ steps.package-manager.outputs.runner }} build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.TEAM_ID }}
        env:
          BACKEND_URL: ${{ secrets.BACKEND_URL }}